{"ast":null,"code":"import { of } from \"rxjs\";\nimport { selectToken } from \"../auth.selectors\";\nimport { map, take } from \"rxjs/operators\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(store, router) {\n      this.store = store;\n      this.router = router;\n    }\n    canActivate() {\n      if (!environment.production) {\n        return of(true);\n      }\n      return this.store.select(selectToken).pipe(take(1), map(token => {\n        if (token) {\n          return true;\n        } else {\n          this.router.navigate(['/login']);\n          return false;\n        }\n      }));\n    }\n    static {\n      this.ɵfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}