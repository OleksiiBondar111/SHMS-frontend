{"ast":null,"code":"import { filter, mapTo, switchMap } from \"rxjs/operators\";\nimport { fromEvent, merge, timer } from \"rxjs\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { logout } from \"../auth/store/actions/auth.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let AutoLogoutService = /*#__PURE__*/(() => {\n  class AutoLogoutService {\n    constructor(store, document, ngZone, router) {\n      this.store = store;\n      this.document = document;\n      this.ngZone = ngZone;\n      this.router = router;\n      this.inactivityTimeout = 5000; // 5 minutes\n      // Monitor user activity across various events\n      this.userActivity$ = merge(fromEvent(this.document, 'mousemove'), fromEvent(this.document, 'keydown'), fromEvent(this.document, 'mousedown'), fromEvent(this.document, 'touchstart'));\n    }\n    startMonitoring() {\n      // Use NgZone to run the timer outside Angular to prevent unnecessary change detection cycles\n      this.ngZone.runOutsideAngular(() => {\n        this.userActivity$.pipe(filter(() => !this.isLoginPage()), switchMap(() => {\n          // Reset the timer whenever there is user activity\n          return timer(this.inactivityTimeout).pipe(mapTo(true));\n        })).subscribe(() => {\n          // Log the user out if there has been no activity for the timeout period\n          this.ngZone.run(() => {\n            this.logoutUser();\n          });\n        });\n      });\n    }\n    logoutUser() {\n      this.store.dispatch(logout());\n      alert('You have been logged out due to inactivity.');\n    }\n    isLoginPage() {\n      return this.router.url === '/login'; // Adjust if your login path is different\n    }\n\n    static {\n      this.ɵfac = function AutoLogoutService_Factory(t) {\n        return new (t || AutoLogoutService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AutoLogoutService,\n        factory: AutoLogoutService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AutoLogoutService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}