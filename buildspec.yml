version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18 # Use an appropriate version for your Angular project
    commands:
      - echo "Installing Node.js dependencies..."
      - npm install -g @angular/cli # Ensure Angular CLI is globally available
      - npm ci # Clean install dependencies from package-lock.json
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - chmod +x npm  # Ensure gradlew has execute permissions
      - npm run build  # Run npm build
      - echo Building the Docker image...
      - docker build -t shms-frontend .
      - docker tag shms-service olexiybondar9685/shms-frontend
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Authenticating with Docker Hub..."
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - echo Pushing the Docker images...
      - docker push olexiybondar9685/shms-frontend
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
